// Generated by CoffeeScript 1.8.0
(function() {
  var $,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $ = jQuery;

  $.fn.extend({
    dapperDoe: function(options) {
      var settings;
      settings = {
        buttonClass: 'btn',
        colorPalette: {
          'eb6566': "Cayenne",
          'f4794d': "Celosia",
          'fbd546': "Freesia",
          '599e7f': "Hemlock",
          '3e8871': "Comfrey",
          '618eb1': "Placid Blue",
          '0d6eb2': "Dazzling Blue",
          '595d8e': "Violet Tulip",
          'b172ab': "Radiant Orchid",
          '792360': "Magenta Purple",
          'ac8b66': "Sand",
          '8b9291': "Paloma"
        }
      };
      settings = $.extend(settings, options);
      return this.each(function() {
        var topElement;
        topElement = this;
        return window.app = new DapperDoe.App({
          settings: settings,
          topElement: $(this)
        });
      });
    }
  });

  DapperDoe.App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function(options) {
      this.templateName = options.settings.templateName;
      this.buttonClass = options.settings.buttonClass;
      this.buttonOptions = options.settings.buttonOptions;
      this.colorPalette = options.settings.colorPalette;
      this.topElement = options.topElement;
      return this.template = new DapperDoe.Models.Template({
        topElement: this.topElement,
        name: this.templateName,
        callback: this.buildApp
      });
    };

    App.prototype.buildApp = function() {
      window.app.initTopElement();
      return window.app.buildUI();
    };

    App.prototype.buildUI = function() {
      return this.sidebar = new DapperDoe.Views.Sidebar({
        collection: this.template.snippetsPreviews
      });
    };

    App.prototype.initTopElement = function() {
      return this.snippetsView = new DapperDoe.Views.Snippets({
        el: this.topElement,
        collection: new DapperDoe.Collections.Snippets()
      });
    };

    return App;

  })(Backbone.Model);

}).call(this);
